:- use_module(library(file_systems)).
:- use_module(library(system)).
:- use_module(library(date)).

:- compile('../mas/redis_client.pl').

:- dynamic height/1.
:- dynamic weight/1.
:- dynamic healthState/1.
:- dynamic patology/1.
:- dynamic medicine/2.
:- dynamic therapy/2.
:- dynamic taken/1.

:- retractall(separator(_)), assert(separator('_')).

:- assert(therapy(medicine('Eutirox%2050','1'),17,46)).
:- assert(therapy(medicine('aspirina','2'),17,46)).

restart_therapy :- datime(datime(Year,Month,Day,Hour,Min,Sec)), Hour == 00, Min == 00.
restart_therapyI :> retractall(taken(_)).

take_medicine(therapy(medicine(Med,Qta),H,M)) :- therapy(medicine(Med,Qta),H,M), datime(datime(Year,Month,Day,Hour,Min,Sec)), H == Hour, Min >= M, not(taken(therapy(medicine(Med,Qta),H,M))).

take_medicineI(therapy(medicine(Med,Qta),H,M)):> separator(Sep), atom_concat('medicina',Sep,Me), atom_concat(Me,Med,Mes), atom_concat(Mes,Sep,Mess), atom_concat(Mess,Qta,Message), print(Message), mas_send(Message), assert(taken(therapy(medicine(Med,Qta),H,M))).

terapiaE(X) :> assert(therapy(X)).

saturazioneE(X) :> if(X<94, mas_send('saturazione_danger'),if(X<97, mas_send('saturazione_ok'),mas_send('saturazione_normal'))).

battitoE(X) :> if(X<60, mas_send('battito_low'),if(X>100, mas_send('battito_high'), mas_send('battito_normal'))).

presminimaE(X) :> if(X<80, mas_send('presminima_low'),if(X>84, mas_send('presminima_high'),mas_send('presminima_normal'))).

presmassimaE(X) :> if(X<115, mas_send('presmassima_low'), if(X>120, mas_send('presmassima_high'), mas_send('presmassima_normal'))).

temperaturaE(X) :> if(X>37, Message = 'pericolo', Message = 'tutto ok'), messageA(generalAgent,send_message(Message,Ag)), retractall(temperature(_)), assert(temperature(X)).

pesoE(X) :> retractall(weight(_)), assert(weight(X)).

altezzaE(X) :> retractall(height(_)), assert(height(X)).

statoE(X) :> retractall(healthState(_)), assert(healthState(X)).

patologiaE(X) :> assert(patology(X)).

misura_temperatura(X) :- presmassimaP(X).

misura_temperaturaI(X) :> print('scatenato evento'), mas_send('misura_temperatura').

ciaoE :> print('ciao user'), messageA(generalAgent,send_message(ciao,Ag)).

provaE :> print('scrivo a python'), mas_send('prova_ricezione').
